FROM alpine:3.6

ENV NODE_VERSION=8.9.4 YARN_VERSION=1.3.2 GOLANG_VERSION=1.9.4

ADD next.package.json /home/theia/package.json
COPY *.patch /go-alpine-patches/

RUN set -eux \
    && addgroup -g 1000 node \
    && adduser -u 1000 -G node -s /bin/sh -D node \
    && apk add --no-cache \
        libstdc++ \
        git \
        bash \
        openssh-client \
        ca-certificates \
        openssl \
    && apk add --no-cache --virtual .build-deps \
        binutils-gold \
        curl \
        g++ \
        gcc \
        gnupg \
        libgcc \
        linux-headers \
        make \
        python \
        tar \
        musl-dev \
        go \
        wget \
        xz \
    && export SHELL="/bin/bash" \
    # gpg keys listed at https://github.com/nodejs/node#release-team
    && for key in \
        94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
        FD3A5288F042B6850C66B31F09FE44734EB7990E \
        71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
        DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
        C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
        B9AE9905FFD7803F25714661B63B535A4C206CA9 \
        56730D5401028683275BD23C23EFEFE93C4CFFFE \
        77984A986EBC2AA786BC0F66B01FBB92821C587A \
        6A010C5166006599AA17F08146C2130DFD2497F5 \
    ; do \
        gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key" || \
        gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key" || \
        gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ; \
    done \
# Node
    && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz" \
    && curl -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
    && grep " node-v$NODE_VERSION.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
    && tar -xf "node-v$NODE_VERSION.tar.xz" \
    && cd "node-v$NODE_VERSION" \
    && ./configure \
    && make -j$(getconf _NPROCESSORS_ONLN) \
    && make install \
#    && apk del .build-deps \
    && cd .. \
    && rm -Rf "node-v$NODE_VERSION" \
    && rm "node-v$NODE_VERSION.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt \
#    apk add --no-cache --virtual .build-deps-yarn curl gnupg tar \
#    && for key in \
#        6A010C5166006599AA17F08146C2130DFD2497F5 \
#    ; do \
#        gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key" || \
#        gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key" || \
#        gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ; \
#    done \
# Yarn
    && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" \
    && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc" \
    && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \
    && mkdir -p /opt/yarn \
    && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \
    && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \
    && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \
    && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \
    
    && cd ~ \
# Go
    && export GOROOT_BOOTSTRAP="$(go env GOROOT)" GOOS="$(go env GOOS)" GOARCH="$(go env GOARCH)" \
      GOHOSTOS="$(go env GOHOSTOS)" GOHOSTARCH="$(go env GOHOSTARCH)" \
    && export GO386='387' \
    && wget -O go.tgz "https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz" \
    && tar -C /usr/local -xzf go.tgz \
    && rm go.tgz \
    && cd /usr/local/go/src \
    && for p in /go-alpine-patches/*.patch \
        ; do \
            [ -f "$p" ] || continue; \
            patch -p2 -i "$p"; \
        done \
    && ./make.bash \
    && rm -rf /go-alpine-patches \
    && export PATH="/usr/local/go/bin:$PATH" \
    && export GOPATH="/home/project" \
    && export PATH=$GOPATH/bin:$PATH \
    && go version \
    && mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH" \
# theia
    && go get -u -v github.com/ramya-rao-a/go-outline \ 
    && go get -u -v github.com/acroca/go-symbols \
    && go get -u -v github.com/nsf/gocode \
    && go get -u -v github.com/rogpeppe/godef \
    && go get -u -v golang.org/x/tools/cmd/godoc \
    && go get -u -v github.com/zmb3/gogetdoc \
    && go get -u -v github.com/golang/lint/golint \
    && go get -u -v github.com/fatih/gomodifytags \
    && go get -u -v github.com/uudashr/gopkgs/cmd/gopkgs \
    && go get -u -v golang.org/x/tools/cmd/gorename \
    && go get -u -v sourcegraph.com/sqs/goreturns \
    && go get -u -v github.com/cweill/gotests/... \
    && go get -u -v golang.org/x/tools/cmd/guru \
    && go get -u -v github.com/josharian/impl \
    && go get -u -v github.com/haya14busa/goplay/cmd/goplay \
    && go get -u -v github.com/golang/dep/cmd/dep \
    && echo fs.inotify.max_user_watches=524288 | tee -a /etc/sysctl.conf \
# Optional for my personal use
    && printf "[user]\n    name = Zate\n    email = zate75@gmail.com\n" > /root/.gitignore \
    && mkdir -p /root/.go \
    && echo '{"toolsGopath":"/root/go"}' > /root/.go/go.json \
    && cd /home/theia \
    && yarn --cache-folder ./ycache && rm -rf ./ycache \
    && yarn theia build \
    && apk del .build-deps

EXPOSE 3000
ENTRYPOINT [ "yarn", "theia", "start", "/home/project", "--hostname=0.0.0.0" ]

